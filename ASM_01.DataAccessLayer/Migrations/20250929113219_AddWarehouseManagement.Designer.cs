// <auto-generated />
using System;
using ASM_01.DataAccessLayer.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASM_01.DataAccessLayer.Migrations
{
    [DbContext(typeof(EVRetailsDbContext))]
    [Migration("20250929113219_AddWarehouseManagement")]
    partial class AddWarehouseManagement
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ASM_01.DataAccessLayer.Entities.VehicleModels.EvModel", b =>
                {
                    b.Property<int>("EvModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EvModelId"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("EvModelId");

                    b.ToTable("EvModel", (string)null);

                    b.HasData(
                        new
                        {
                            EvModelId = 1,
                            Description = "Mid-size all-electric SUV",
                            ModelName = "VinFast VF8",
                            Status = 1
                        },
                        new
                        {
                            EvModelId = 2,
                            Description = "Compact SUV with long range",
                            ModelName = "Tesla Model Y",
                            Status = 1
                        });
                });

            modelBuilder.Entity("ASM_01.DataAccessLayer.Entities.VehicleModels.EvTrim", b =>
                {
                    b.Property<int>("EvTrimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EvTrimId"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("EvModelId")
                        .HasColumnType("int");

                    b.Property<int?>("ModelYear")
                        .HasColumnType("int");

                    b.Property<string>("TrimName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("EvTrimId");

                    b.HasIndex("EvModelId");

                    b.ToTable("EvTrim", (string)null);

                    b.HasData(
                        new
                        {
                            EvTrimId = 1,
                            Description = "Entry version",
                            EvModelId = 1,
                            ModelYear = 2024,
                            TrimName = "VF8 Eco"
                        },
                        new
                        {
                            EvTrimId = 2,
                            Description = "Premium version",
                            EvModelId = 1,
                            ModelYear = 2024,
                            TrimName = "VF8 Plus"
                        },
                        new
                        {
                            EvTrimId = 3,
                            Description = "Dual motor",
                            EvModelId = 2,
                            ModelYear = 2024,
                            TrimName = "Model Y Long Range"
                        },
                        new
                        {
                            EvTrimId = 4,
                            Description = "High performance",
                            EvModelId = 2,
                            ModelYear = 2024,
                            TrimName = "Model Y Performance"
                        });
                });

            modelBuilder.Entity("ASM_01.DataAccessLayer.Entities.VehicleModels.Spec", b =>
                {
                    b.Property<int>("SpecId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecId"));

                    b.Property<int?>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<string>("SpecName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SpecId");

                    b.HasIndex("SpecName")
                        .IsUnique();

                    b.ToTable("Spec", (string)null);

                    b.HasData(
                        new
                        {
                            SpecId = 1,
                            Category = 0,
                            SpecName = "Battery Capacity",
                            Unit = "kWh"
                        },
                        new
                        {
                            SpecId = 2,
                            Category = 0,
                            SpecName = "Range",
                            Unit = "km"
                        },
                        new
                        {
                            SpecId = 3,
                            Category = 1,
                            SpecName = "Motor Power",
                            Unit = "hp"
                        },
                        new
                        {
                            SpecId = 4,
                            Category = 2,
                            SpecName = "Charging Time (fast)",
                            Unit = "minutes"
                        },
                        new
                        {
                            SpecId = 5,
                            Category = 3,
                            SpecName = "Seating Capacity",
                            Unit = "seats"
                        });
                });

            modelBuilder.Entity("ASM_01.DataAccessLayer.Entities.VehicleModels.TrimPrice", b =>
                {
                    b.Property<int>("TrimPriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrimPriceId"));

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EvTrimId")
                        .HasColumnType("int");

                    b.Property<decimal>("ListedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TrimPriceId");

                    b.HasIndex("EvTrimId");

                    b.ToTable("TrimPrice", (string)null);

                    b.HasData(
                        new
                        {
                            TrimPriceId = 1,
                            EffectiveDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EvTrimId = 1,
                            ListedPrice = 46000m
                        },
                        new
                        {
                            TrimPriceId = 2,
                            EffectiveDate = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EvTrimId = 1,
                            ListedPrice = 47000m
                        },
                        new
                        {
                            TrimPriceId = 3,
                            EffectiveDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EvTrimId = 2,
                            ListedPrice = 52000m
                        },
                        new
                        {
                            TrimPriceId = 4,
                            EffectiveDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EvTrimId = 3,
                            ListedPrice = 55000m
                        },
                        new
                        {
                            TrimPriceId = 5,
                            EffectiveDate = new DateTime(2024, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EvTrimId = 3,
                            ListedPrice = 56000m
                        },
                        new
                        {
                            TrimPriceId = 6,
                            EffectiveDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EvTrimId = 4,
                            ListedPrice = 61000m
                        });
                });

            modelBuilder.Entity("ASM_01.DataAccessLayer.Entities.VehicleModels.TrimSpec", b =>
                {
                    b.Property<int>("EvTrimId")
                        .HasColumnType("int");

                    b.Property<int>("SpecId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("EvTrimId", "SpecId");

                    b.HasIndex("SpecId");

                    b.ToTable("TrimSpec", (string)null);

                    b.HasData(
                        new
                        {
                            EvTrimId = 1,
                            SpecId = 1,
                            Value = "82"
                        },
                        new
                        {
                            EvTrimId = 1,
                            SpecId = 2,
                            Value = "420"
                        },
                        new
                        {
                            EvTrimId = 1,
                            SpecId = 3,
                            Value = "350"
                        },
                        new
                        {
                            EvTrimId = 1,
                            SpecId = 4,
                            Value = "35"
                        },
                        new
                        {
                            EvTrimId = 1,
                            SpecId = 5,
                            Value = "5"
                        },
                        new
                        {
                            EvTrimId = 2,
                            SpecId = 1,
                            Value = "87"
                        },
                        new
                        {
                            EvTrimId = 2,
                            SpecId = 2,
                            Value = "470"
                        },
                        new
                        {
                            EvTrimId = 2,
                            SpecId = 3,
                            Value = "402"
                        },
                        new
                        {
                            EvTrimId = 2,
                            SpecId = 4,
                            Value = "30"
                        },
                        new
                        {
                            EvTrimId = 2,
                            SpecId = 5,
                            Value = "5"
                        },
                        new
                        {
                            EvTrimId = 3,
                            SpecId = 1,
                            Value = "82"
                        },
                        new
                        {
                            EvTrimId = 3,
                            SpecId = 2,
                            Value = "497"
                        },
                        new
                        {
                            EvTrimId = 3,
                            SpecId = 3,
                            Value = "384"
                        },
                        new
                        {
                            EvTrimId = 3,
                            SpecId = 4,
                            Value = "27"
                        },
                        new
                        {
                            EvTrimId = 3,
                            SpecId = 5,
                            Value = "5"
                        },
                        new
                        {
                            EvTrimId = 4,
                            SpecId = 1,
                            Value = "82"
                        },
                        new
                        {
                            EvTrimId = 4,
                            SpecId = 2,
                            Value = "450"
                        },
                        new
                        {
                            EvTrimId = 4,
                            SpecId = 3,
                            Value = "456"
                        },
                        new
                        {
                            EvTrimId = 4,
                            SpecId = 4,
                            Value = "25"
                        },
                        new
                        {
                            EvTrimId = 4,
                            SpecId = 5,
                            Value = "5"
                        });
                });

            modelBuilder.Entity("ASM_01.DataAccessLayer.Entities.Warehouse.Dealer", b =>
                {
                    b.Property<int>("DealerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DealerId"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DealerId");

                    b.ToTable("Dealers");

                    b.HasData(
                        new
                        {
                            DealerId = 1,
                            Address = "New York, NY",
                            Name = "City EV Motors"
                        });
                });

            modelBuilder.Entity("ASM_01.DataAccessLayer.Entities.Warehouse.DistributionRequest", b =>
                {
                    b.Property<int>("DistributionRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistributionRequestId"));

                    b.Property<DateTime?>("ApprovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ApprovedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("DealerId")
                        .HasColumnType("int");

                    b.Property<int>("EvTrimId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RequestedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.HasKey("DistributionRequestId");

                    b.HasIndex("DealerId");

                    b.HasIndex("EvTrimId");

                    b.ToTable("DistributionRequests");
                });

            modelBuilder.Entity("ASM_01.DataAccessLayer.Entities.Warehouse.VehicleStock", b =>
                {
                    b.Property<int>("VehicleStockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleStockId"));

                    b.Property<int>("DealerId")
                        .HasColumnType("int");

                    b.Property<int>("EvTrimId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("VehicleStockId");

                    b.HasIndex("DealerId");

                    b.HasIndex("EvTrimId");

                    b.ToTable("VehicleStocks");

                    b.HasData(
                        new
                        {
                            VehicleStockId = 1,
                            DealerId = 1,
                            EvTrimId = 1,
                            Quantity = 5
                        },
                        new
                        {
                            VehicleStockId = 2,
                            DealerId = 1,
                            EvTrimId = 3,
                            Quantity = 3
                        });
                });

            modelBuilder.Entity("ASM_01.DataAccessLayer.Entities.VehicleModels.EvTrim", b =>
                {
                    b.HasOne("ASM_01.DataAccessLayer.Entities.VehicleModels.EvModel", "EvModel")
                        .WithMany("Trims")
                        .HasForeignKey("EvModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EvModel");
                });

            modelBuilder.Entity("ASM_01.DataAccessLayer.Entities.VehicleModels.TrimPrice", b =>
                {
                    b.HasOne("ASM_01.DataAccessLayer.Entities.VehicleModels.EvTrim", "EvTrim")
                        .WithMany("Prices")
                        .HasForeignKey("EvTrimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EvTrim");
                });

            modelBuilder.Entity("ASM_01.DataAccessLayer.Entities.VehicleModels.TrimSpec", b =>
                {
                    b.HasOne("ASM_01.DataAccessLayer.Entities.VehicleModels.EvTrim", "EvTrim")
                        .WithMany("TrimSpecs")
                        .HasForeignKey("EvTrimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASM_01.DataAccessLayer.Entities.VehicleModels.Spec", "Spec")
                        .WithMany("TrimSpecs")
                        .HasForeignKey("SpecId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EvTrim");

                    b.Navigation("Spec");
                });

            modelBuilder.Entity("ASM_01.DataAccessLayer.Entities.Warehouse.DistributionRequest", b =>
                {
                    b.HasOne("ASM_01.DataAccessLayer.Entities.Warehouse.Dealer", "Dealer")
                        .WithMany("DistributionRequests")
                        .HasForeignKey("DealerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASM_01.DataAccessLayer.Entities.VehicleModels.EvTrim", "EvTrim")
                        .WithMany("DistributionRequests")
                        .HasForeignKey("EvTrimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dealer");

                    b.Navigation("EvTrim");
                });

            modelBuilder.Entity("ASM_01.DataAccessLayer.Entities.Warehouse.VehicleStock", b =>
                {
                    b.HasOne("ASM_01.DataAccessLayer.Entities.Warehouse.Dealer", "Dealer")
                        .WithMany("VehicleStocks")
                        .HasForeignKey("DealerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASM_01.DataAccessLayer.Entities.VehicleModels.EvTrim", "EvTrim")
                        .WithMany("VehicleStocks")
                        .HasForeignKey("EvTrimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dealer");

                    b.Navigation("EvTrim");
                });

            modelBuilder.Entity("ASM_01.DataAccessLayer.Entities.VehicleModels.EvModel", b =>
                {
                    b.Navigation("Trims");
                });

            modelBuilder.Entity("ASM_01.DataAccessLayer.Entities.VehicleModels.EvTrim", b =>
                {
                    b.Navigation("DistributionRequests");

                    b.Navigation("Prices");

                    b.Navigation("TrimSpecs");

                    b.Navigation("VehicleStocks");
                });

            modelBuilder.Entity("ASM_01.DataAccessLayer.Entities.VehicleModels.Spec", b =>
                {
                    b.Navigation("TrimSpecs");
                });

            modelBuilder.Entity("ASM_01.DataAccessLayer.Entities.Warehouse.Dealer", b =>
                {
                    b.Navigation("DistributionRequests");

                    b.Navigation("VehicleStocks");
                });
#pragma warning restore 612, 618
        }
    }
}
